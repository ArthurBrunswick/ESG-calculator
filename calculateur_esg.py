# 1. Imports
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import os

# 2. Configuration de la page
st.set_page_config(
    page_title="Calculateur de Carri√®re ESG - √âcole de la Durabilit√© 2050",
    page_icon="üå±",
)

# 3. Fonctions de chargement de donn√©es
def load_data():
    """Charge les donn√©es des salaires ESG."""
    # Donn√©es directement int√©gr√©es (plus tard on pourra les mettre dans un CSV)
    data = {
        'M√©tier': ['Analyste ESG', 'Analyste ESG', 'Analyste ESG', 
                  'Responsable ESG', 'Responsable ESG', 'Responsable ESG'],
        'Exp√©rience': ['0-2 ans', '2-5 ans', '5-10 ans', 
                      '0-2 ans', '2-5 ans', '5-10 ans'],
        'Salaire_Min': [35000, 40000, 50000, 35000, 47000, 61000],
        'Salaire_Max': [45000, 50000, 65000, 47000, 61000, 70000],
        'Salaire_Moyen': [40000, 45000, 57500, 41000, 54000, 65500]
    }
    return pd.DataFrame(data)

# 4. Fonctions de visualisation
def create_salary_chart(df_filtered):
    """Cr√©e un graphique d'√©volution salariale."""
    fig, ax = plt.subplots(figsize=(10, 6))
    
    # Tracer la ligne des salaires moyens
    ax.plot(df_filtered['Exp√©rience'], df_filtered['Salaire_Moyen'], 
            marker='o', linestyle='-', color='green')
    
    ax.set_ylabel('Salaire annuel brut (‚Ç¨)')
    ax.set_xlabel('Exp√©rience')
    ax.grid(True)
    
    return fig

# 5. Application principale
def main():
    """Fonction principale de l'application."""
    # Titre et introduction
    st.title("üí∞ Calculateur de Carri√®re ESG")
    st.markdown("### D√©couvrez les perspectives salariales des m√©tiers durables")
    
    # Chargement des donn√©es
    df = load_data()
    
    # Interface utilisateur
    m√©tier_s√©lectionn√© = st.selectbox(
        "Choisissez un m√©tier √† explorer",
        options=df['M√©tier'].unique()
    )
    
    # Filtrer les donn√©es
    df_filtered = df[df['M√©tier'] == m√©tier_s√©lectionn√©]
    
    # Afficher les donn√©es dans un tableau
    st.write(f"Donn√©es salariales pour {m√©tier_s√©lectionn√©}")
    st.dataframe(df_filtered[['Exp√©rience', 'Salaire_Min', 'Salaire_Max', 'Salaire_Moyen']])
    
    # Afficher le graphique
    st.subheader(f"√âvolution salariale : {m√©tier_s√©lectionn√©}")
    st.pyplot(create_salary_chart(df_filtered))
    
    # Formulaire de contact
    st.markdown("---")
    st.markdown("### Int√©ress√©(e) par une formation aux m√©tiers de la durabilit√©?")
    
    with st.form("contact_form"):
        email = st.text_input("Votre email")
        submitted = st.form_submit_button("Me tenir inform√©(e)")
        
        if submitted and email:
            st.success("Merci! Vous recevrez bient√¥t plus d'informations.")

# 6. Point d'entr√©e
if __name__ == "__main__":
    main()